# this file is @generated by cargo2meson 0.1.0

rust = import('rust')

# caller may pass more compiler args
if not is_variable('unit2args')
    unit2args = {}
endif

# caller may override the name given to the unit
if not is_variable('unit2name')
    unit2name = {}
endif


# regex-syntax 0.8.5 (registry+https://github.com/rust-lang/crates.io-index)
unit20 = library(
    unit2name.get('20', 'unit20'), # regex_syntax
    sources: structured_sources('vendor/regex-syntax/src/lib.rs'),
    rust_args: [
        '--edition=2021',
        '--cfg', 'feature="default"',
        '--cfg', 'feature="std"',
        '--cfg', 'feature="unicode"',
        '--cfg', 'feature="unicode-age"',
        '--cfg', 'feature="unicode-bool"',
        '--cfg', 'feature="unicode-case"',
        '--cfg', 'feature="unicode-gencat"',
        '--cfg', 'feature="unicode-perl"',
        '--cfg', 'feature="unicode-script"',
        '--cfg', 'feature="unicode-segment"',
        unit2args.get('20', []),
    ],
)

# unicode-ident 1.0.14 (registry+https://github.com/rust-lang/crates.io-index)
unit27 = library(
    unit2name.get('27', 'unit27'), # unicode_ident
    sources: structured_sources('vendor/unicode-ident/src/lib.rs'),
    rust_args: [
        '--edition=2018',
        unit2args.get('27', []),
    ],
)

# proc-macro2 1.0.92 (registry+https://github.com/rust-lang/crates.io-index)
# (had build script)
unit10 = library(
    unit2name.get('10', 'unit10'), # proc_macro2
    sources: structured_sources('vendor/proc-macro2/src/lib.rs'),
    rust_args: [
        '--edition=2021',
        '--cfg', 'feature="default"',
        '--cfg', 'feature="proc-macro"',
        unit2args.get('10', []),
    ],
    link_with: [
        unit27, # unicode_ident
    ],
    rust_dependency_map: {
        unit27.name(): 'unicode_ident',
    },
)

# quote 1.0.37 (registry+https://github.com/rust-lang/crates.io-index)
unit16 = library(
    unit2name.get('16', 'unit16'), # quote
    sources: structured_sources('vendor/quote/src/lib.rs'),
    rust_args: [
        '--edition=2018',
        '--cfg', 'feature="default"',
        '--cfg', 'feature="proc-macro"',
        unit2args.get('16', []),
    ],
    link_with: [
        unit10, # proc_macro2
    ],
    rust_dependency_map: {
        unit10.name(): 'proc_macro2',
    },
)

# proc-macro2 1.0.92 (registry+https://github.com/rust-lang/crates.io-index)
# (had build script)
unit11 = library(
    unit2name.get('11', 'unit11'), # proc_macro2
    sources: structured_sources('vendor/proc-macro2/src/lib.rs'),
    rust_args: [
        '--edition=2021',
        unit2args.get('11', []),
    ],
    link_with: [
        unit27, # unicode_ident
    ],
    rust_dependency_map: {
        unit27.name(): 'unicode_ident',
    },
)

# quote 1.0.37 (registry+https://github.com/rust-lang/crates.io-index)
unit17 = library(
    unit2name.get('17', 'unit17'), # quote
    sources: structured_sources('vendor/quote/src/lib.rs'),
    rust_args: [
        '--edition=2018',
        unit2args.get('17', []),
    ],
    link_with: [
        unit11, # proc_macro2
    ],
    rust_dependency_map: {
        unit11.name(): 'proc_macro2',
    },
)

# syn 2.0.90 (registry+https://github.com/rust-lang/crates.io-index)
unit26 = library(
    unit2name.get('26', 'unit26'), # syn
    sources: structured_sources('vendor/syn/src/lib.rs'),
    rust_args: [
        '--edition=2021',
        '--cfg', 'feature="clone-impls"',
        '--cfg', 'feature="full"',
        '--cfg', 'feature="parsing"',
        '--cfg', 'feature="printing"',
        '--cfg', 'feature="visit"',
        unit2args.get('26', []),
    ],
    link_with: [
        unit11, # proc_macro2
        unit17, # quote
        unit27, # unicode_ident
    ],
    rust_dependency_map: {
        unit11.name(): 'proc_macro2',
        unit17.name(): 'quote',
        unit27.name(): 'unicode_ident',
    },
)

# prettyplease 0.2.25 (registry+https://github.com/rust-lang/crates.io-index)
# (had build script)
unit7 = library(
    unit2name.get('7', 'unit7'), # prettyplease
    sources: structured_sources('vendor/prettyplease/src/lib.rs'),
    rust_args: [
        '--edition=2021',
        unit2args.get('7', []),
    ],
    link_with: [
        unit11, # proc_macro2
        unit26, # syn
    ],
    rust_dependency_map: {
        unit11.name(): 'proc_macro2',
        unit26.name(): 'syn',
    },
)

# minimal-lexical 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)
unit5 = library(
    unit2name.get('5', 'unit5'), # minimal_lexical
    sources: structured_sources('vendor/minimal-lexical/src/lib.rs'),
    rust_args: [
        '--edition=2018',
        '--cfg', 'feature="std"',
        unit2args.get('5', []),
    ],
)

# syn 2.0.90 (registry+https://github.com/rust-lang/crates.io-index)
unit25 = library(
    unit2name.get('25', 'unit25'), # syn
    sources: structured_sources('vendor/syn/src/lib.rs'),
    rust_args: [
        '--edition=2021',
        '--cfg', 'feature="clone-impls"',
        '--cfg', 'feature="default"',
        '--cfg', 'feature="derive"',
        '--cfg', 'feature="full"',
        '--cfg', 'feature="parsing"',
        '--cfg', 'feature="printing"',
        '--cfg', 'feature="proc-macro"',
        unit2args.get('25', []),
    ],
    link_with: [
        unit10, # proc_macro2
        unit16, # quote
        unit27, # unicode_ident
    ],
    rust_dependency_map: {
        unit10.name(): 'proc_macro2',
        unit16.name(): 'quote',
        unit27.name(): 'unicode_ident',
    },
)

# libc 0.2.168 (registry+https://github.com/rust-lang/crates.io-index)
# (had build script)
unit1 = library(
    unit2name.get('1', 'unit1'), # libc
    sources: structured_sources('vendor/libc/src/lib.rs'),
    rust_args: [
        '--edition=2021',
        '--cfg', 'feature="std"',
        unit2args.get('1', []),
    ],
)

# seasick 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)
unit22 = library(
    unit2name.get('22', 'unit22'), # seasick
    sources: structured_sources('vendor/seasick/src/lib.rs'),
    rust_args: [
        '--edition=2021',
        '--cfg', 'feature="alloc"',
        '--cfg', 'feature="default"',
        '--cfg', 'feature="libc"',
        '--cfg', 'feature="std"',
        unit2args.get('22', []),
    ],
    link_with: [
        unit1, # libc
    ],
    rust_dependency_map: {
        unit1.name(): 'libc',
    },
)

# seesaw-macros 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)
unit24 = rust.proc_macro(
    unit2name.get('24', 'unit24'), # seesaw_macros
    sources: structured_sources('vendor/seesaw-macros/src/lib.rs'),
    rust_args: [
        '--edition=2021',
        unit2args.get('24', []),
    ],
    link_with: [
        unit10, # proc_macro2
        unit16, # quote
        unit25, # syn
    ],
    rust_dependency_map: {
        unit10.name(): 'proc_macro2',
        unit16.name(): 'quote',
        unit25.name(): 'syn',
    },
)

# memchr 2.7.4 (registry+https://github.com/rust-lang/crates.io-index)
unit4 = library(
    unit2name.get('4', 'unit4'), # memchr
    sources: structured_sources('vendor/memchr/src/lib.rs'),
    rust_args: [
        '--edition=2021',
        '--cfg', 'feature="alloc"',
        '--cfg', 'feature="std"',
        unit2args.get('4', []),
    ],
)

# aho-corasick 1.1.3 (registry+https://github.com/rust-lang/crates.io-index)
unit0 = library(
    unit2name.get('0', 'unit0'), # aho_corasick
    sources: structured_sources('vendor/aho-corasick/src/lib.rs'),
    rust_args: [
        '--edition=2021',
        '--cfg', 'feature="perf-literal"',
        '--cfg', 'feature="std"',
        unit2args.get('0', []),
    ],
    link_with: [
        unit4, # memchr
    ],
    rust_dependency_map: {
        unit4.name(): 'memchr',
    },
)

# nom 7.1.3 (registry+https://github.com/rust-lang/crates.io-index)
unit6 = library(
    unit2name.get('6', 'unit6'), # nom
    sources: structured_sources('vendor/nom/src/lib.rs'),
    rust_args: [
        '--edition=2018',
        '--cfg', 'feature="alloc"',
        '--cfg', 'feature="default"',
        '--cfg', 'feature="std"',
        unit2args.get('6', []),
    ],
    link_with: [
        unit4, # memchr
        unit5, # minimal_lexical
    ],
    rust_dependency_map: {
        unit4.name(): 'memchr',
        unit5.name(): 'minimal_lexical',
    },
)

# regex-automata 0.4.9 (registry+https://github.com/rust-lang/crates.io-index)
unit19 = library(
    unit2name.get('19', 'unit19'), # regex_automata
    sources: structured_sources('vendor/regex-automata/src/lib.rs'),
    rust_args: [
        '--edition=2021',
        '--cfg', 'feature="alloc"',
        '--cfg', 'feature="dfa-onepass"',
        '--cfg', 'feature="hybrid"',
        '--cfg', 'feature="meta"',
        '--cfg', 'feature="nfa-backtrack"',
        '--cfg', 'feature="nfa-pikevm"',
        '--cfg', 'feature="nfa-thompson"',
        '--cfg', 'feature="perf-inline"',
        '--cfg', 'feature="perf-literal"',
        '--cfg', 'feature="perf-literal-multisubstring"',
        '--cfg', 'feature="perf-literal-substring"',
        '--cfg', 'feature="std"',
        '--cfg', 'feature="syntax"',
        '--cfg', 'feature="unicode"',
        '--cfg', 'feature="unicode-age"',
        '--cfg', 'feature="unicode-bool"',
        '--cfg', 'feature="unicode-case"',
        '--cfg', 'feature="unicode-gencat"',
        '--cfg', 'feature="unicode-perl"',
        '--cfg', 'feature="unicode-script"',
        '--cfg', 'feature="unicode-segment"',
        '--cfg', 'feature="unicode-word-boundary"',
        unit2args.get('19', []),
    ],
    link_with: [
        unit0, # aho_corasick
        unit4, # memchr
        unit20, # regex_syntax
    ],
    rust_dependency_map: {
        unit0.name(): 'aho_corasick',
        unit4.name(): 'memchr',
        unit20.name(): 'regex_syntax',
    },
)

# regex 1.11.1 (registry+https://github.com/rust-lang/crates.io-index)
unit18 = library(
    unit2name.get('18', 'unit18'), # regex
    sources: structured_sources('vendor/regex/src/lib.rs'),
    rust_args: [
        '--edition=2021',
        '--cfg', 'feature="default"',
        '--cfg', 'feature="perf"',
        '--cfg', 'feature="perf-backtrack"',
        '--cfg', 'feature="perf-cache"',
        '--cfg', 'feature="perf-dfa"',
        '--cfg', 'feature="perf-inline"',
        '--cfg', 'feature="perf-literal"',
        '--cfg', 'feature="perf-onepass"',
        '--cfg', 'feature="std"',
        '--cfg', 'feature="unicode"',
        '--cfg', 'feature="unicode-age"',
        '--cfg', 'feature="unicode-bool"',
        '--cfg', 'feature="unicode-case"',
        '--cfg', 'feature="unicode-gencat"',
        '--cfg', 'feature="unicode-perl"',
        '--cfg', 'feature="unicode-script"',
        '--cfg', 'feature="unicode-segment"',
        unit2args.get('18', []),
    ],
    link_with: [
        unit0, # aho_corasick
        unit4, # memchr
        unit19, # regex_automata
        unit20, # regex_syntax
    ],
    rust_dependency_map: {
        unit0.name(): 'aho_corasick',
        unit4.name(): 'memchr',
        unit19.name(): 'regex_automata',
        unit20.name(): 'regex_syntax',
    },
)

# seesaw 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)
unit23 = library(
    unit2name.get('23', 'unit23'), # seesaw
    sources: structured_sources('vendor/seesaw/src/lib.rs'),
    rust_args: [
        '--edition=2021',
        '--cfg', 'feature="build"',
        '--cfg', 'feature="default"',
        '--cfg', 'feature="macros"',
        '--cfg', 'feature="std"',
        unit2args.get('23', []),
    ],
    link_with: [
        unit7, # prettyplease
        unit11, # proc_macro2
        unit17, # quote
        unit18, # regex
        unit24, # seesaw_macros
        unit26, # syn
    ],
    rust_dependency_map: {
        unit7.name(): 'prettyplease',
        unit11.name(): 'proc_macro2',
        unit17.name(): 'quote',
        unit18.name(): 'regex',
        unit24.name(): 'seesaw_macros',
        unit26.name(): 'syn',
    },
)

# rust3p 0.1.0 (path+file:///home/aatif/code/dpdk/rust3p)
unit21 = library(
    unit2name.get('21', 'unit21'), # rust3p
    sources: structured_sources('src/lib.rs'),
    rust_args: [
        '--edition=2021',
        unit2args.get('21', []),
    ],
    link_with: [
        unit6, # nom
        unit22, # seasick
        unit23, # seesaw
    ],
    rust_dependency_map: {
        unit6.name(): 'nom',
        unit22.name(): 'seasick',
        unit23.name(): 'seesaw',
    },
)
